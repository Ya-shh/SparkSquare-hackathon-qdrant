{
  "name": "sparksquare",
  "version": "0.1.0",
  "private": true,
  "author": "yashh",
  "description": "AI-powered discussion platform with vector search and intelligent recommendations",
  "repository": {
    "type": "git",
    "url": "https://github.com/yashh/sparksquare.git"
  },
  "homepage": "https://github.com/yashh/sparksquare",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "first-setup": "node scripts/first-time-setup.js",
    "qdrant:init": "npx ts-node scripts/init-qdrant.ts",
    "strip:comments": "node scripts/strip-comments.js",
    "setup": "node scripts/setup.js",
    "verify": "node scripts/verify-setup.js",
    "reset-db": "node scripts/reset-seed-db.js",
    "seed": "npx ts-node prisma/seed.ts",
    "seed:achievements": "npx ts-node scripts/seed-achievements.ts",
    "index:content": "npx ts-node scripts/index-content.ts",
    "deploy-init": "node scripts/deploy-init.js",
    "deploy": "node scripts/deploy.js",
    "vercel-build": "prisma generate && touch .env.production.local && echo \"SKIP_BUILD_STATIC_GENERATION=1\" >> .env.production.local && NODE_OPTIONS=--max_old_space_size=4096 next build",
    "prepare": "husky",
    "clean-start": "docker-compose down && docker system prune -f && docker rmi sparksquare-app 2>/dev/null || true && docker-compose up --build -d && echo 'üéâ SparkSquare started with latest code!'",
    "rebuild": "docker-compose down && docker-compose up --build -d && echo 'üîÑ SparkSquare rebuilt with latest changes!'",
    "fresh-install": "npm ci && docker-compose down && docker system prune -f && docker rmi sparksquare-app 2>/dev/null || true && docker-compose up --build -d && npm run setup && echo 'üöÄ Fresh SparkSquare installation complete!'",
    "verify-latest": "docker ps --format 'table {{.Names}}\\t{{.Image}}\\t{{.CreatedAt}}\\t{{.Status}}' && echo '\\nüìä Testing application...' && curl -s -o /dev/null -w 'HTTP Status: %{http_code}\\n' http://localhost:3000",
    "index-all": "npx ts-node scripts/comprehensive-index.ts",
    "seed-test": "npx ts-node scripts/seed-test-content.ts",
    "vector-search-setup": "npm run clean-start && sleep 10 && npm run seed-test && echo 'üîç Vector search is now fully operational!'",
    "qdrant:init-enhanced": "npx ts-node scripts/init-enhanced-qdrant.ts",
    "qdrant:index-multimodal": "npx ts-node scripts/index-multimodal-content.ts",
    "qdrant:full-setup": "npm run qdrant:init-enhanced && npm run qdrant:index-multimodal && echo 'üéâ Enhanced Qdrant setup complete!'",
    "multimodal:setup": "npx ts-node scripts/setup-multimodal.ts",
    "multimodal:full-setup": "npm run multimodal:setup && npm run qdrant:index-multimodal && echo 'üéâ Complete multimodal AI platform ready!'",
    "multimodal:init-platform": "npx ts-node scripts/init-multimodal-platform.ts",
    "mixtral:setup": "echo 'ü§ñ Setting up Mixtral-8x22B integration...' && npm install @mistralai/mistralai@latest && echo '‚úÖ Mixtral-8x22B ready!'",
    "docker:run": "bash scripts/docker-run.sh",
    "docker:stop": "docker compose -f docker-compose.full.yml down",
    "docker:logs": "docker compose -f docker-compose.full.yml logs -f",
    "docker:clean": "docker compose -f docker-compose.full.yml down -v && docker system prune -f",
    "dev:docker": "docker compose -f docker-compose.dev.yml up --build",
    "dev:docker:down": "docker compose -f docker-compose.dev.yml down",
    "dev:docker:logs": "docker compose -f docker-compose.dev.yml logs -f",
    "dev:docker:clean": "docker compose -f docker-compose.dev.yml down -v && docker system prune -f",
    "dev:docker:rebuild": "docker compose -f docker-compose.dev.yml down && docker compose -f docker-compose.dev.yml up --build",
    "dev:hot": "docker compose -f docker-compose.simple.yml up",
    "dev:hot:down": "docker compose -f docker-compose.simple.yml down",
    "dev:hot:logs": "docker compose -f docker-compose.simple.yml logs -f app",
    "quick-start": "node scripts/quick-start.js",
    "quick-start:basic": "node scripts/quick-start.js --basic",
    "test:api-keys": "node scripts/test-api-keys.js",
    "test:qdrant-features": "echo 'üß™ Testing Qdrant features...' && curl -s http://localhost:3000/api/search?q=test || echo 'Start your dev server first: npm run dev'",
    "test:qdrant-snapshot": "node scripts/test-snapshots/qdrant-snapshot-simple.js",
    "test:qdrant-quick": "node scripts/test-snapshots/run-snapshot.js",
    "analyze:state": "node scripts/test-snapshots/analyze-current-state.js",
    "fix:setup": "node scripts/test-snapshots/fix-setup.js"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.8.0",
    "@huggingface/inference": "^4.8.0",
    "@mistralai/mistralai": "^1.10.0",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@prisma/client": "^6.5.0",
    "@qdrant/js-client-rest": "^1.13.0",
    "@studio-freight/lenis": "^1.0.42",
    "@types/lodash": "^4.17.16",
    "@upstash/ratelimit": "^2.0.5",
    "@upstash/redis": "^1.34.6",
    "aos": "^2.3.4",
    "bcrypt": "^5.1.1",
    "bcryptjs": "^3.0.2",
    "canvas": "^3.2.0",
    "date-fns": "^4.1.0",
    "dotenv": "^17.2.2",
    "formdata-node": "^6.0.3",
    "framer-motion": "^12.6.2",
    "gsap": "^3.12.7",
    "lodash": "^4.17.21",
    "lucide-react": "^0.460.0",
    "mammoth": "^1.10.0",
    "multer": "^2.0.2",
    "next": "15.2.4",
    "next-auth": "^4.24.11",
    "next-themes": "^0.4.6",
    "openai": "^4.90.0",
    "pdf-parse": "^1.1.1",
    "prisma": "^6.5.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-hot-toast": "^2.5.2",
    "react-icons": "^5.5.0",
    "react-scroll-parallax": "^3.4.5",
    "sharp": "^0.34.3",
    "sonner": "^2.0.3",
    "swr": "^2.3.3",
    "zod": "^3.24.2",
    "zustand": "^5.0.3"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@faker-js/faker": "^9.6.0",
    "@types/aos": "^3.0.7",
    "@types/bcrypt": "^5.0.2",
    "@types/node": "^20.17.30",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "autoprefixer": "^10.4.21",
    "eslint": "^9",
    "eslint-config-next": "15.2.4",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-tailwindcss": "^3.17.5",
    "husky": "^9.1.6",
    "lint-staged": "^15.2.10",
    "postcss": "^8.5.3",
    "prettier": "^3.3.3",
    "prettier-plugin-tailwindcss": "^0.6.9",
    "tailwindcss": "^3.4.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,css}": [
      "prettier --write"
    ]
  },
  "prisma": {
    "seed": "npx ts-node prisma/seed.ts"
  }
}
